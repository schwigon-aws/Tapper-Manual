=head1 Preconditions

The central thing that is needed before a test is run is a so called
B<precondition>. Creating those preconditions is the main task
needed to do when using the automation framework.

Most of the I<preconditions> describe packages that need to be
installed. Other preconditions describe how subdirs should be copied
or scripts be executed.

A I<precondition> can depend on other preconditions, leading to a
tree of preconditions that will be installed from the leaves to the
top.

=over 4

=item * SYNOPSIS::                    

=item * Layers of preconditions::     

=item * Precondition repository::     

=item * Overview Precondition Types::  

=item * Details Precondition Types::  

=item * Macro Preconditions::         

=item * Testplans::                   

=item * Precondition Producers::      

=back

=head2 SYNOPSIS

=head2 Layers of preconditions

=head2 Precondition repository

=head2 Overview Precondition Types

=head2 Details Precondition Types

=head2 Macro Preconditions

=head2 Testplans

=head2 Precondition Producers

=over 4

=item Create a (maybe temporary) file

=item Define conditions for a testrun: the =dfn{preconditions}

=item Put the precondition into the database, maybe referring to other preconditions

=item Create a testrun in the database, referring to the precondition

=item Wait until the testrun is executed and results are reported

=back


=head2 Layers of preconditions

There are ``normal preconditions'' and ``macro preconditions''.

=head3 Normal preconditions

We store preconditions in the database and assign I<testruns> to
them (also in the database).

Usually the preconditions were developed in a (temporary) file and
then entered into the database with a tool. After that the temporary
file can be deleted. Note that such a precondition file can contain
multiple precondition as long as they are formated as valid YAML.

I<Preconditions> can be kept in files to re-use them when creating
testruns but that's not needed for archiving purposes, only for
creation purposes.

Please note: B<Normal preconditions are usually not what you
want.> It's the low level mechanism. Its advantage is in reusing the
preconditions by referring to IDs and creating trees of
preconditions. This reuse is usually too complex. B<What you
typically want are Macro Preconditions>.
